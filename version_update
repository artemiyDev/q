#!/bin/bash

cat << "EOF"

                    QQQQQQQQQ       1111111   
                  QQ:::::::::QQ    1::::::1   
                QQ:::::::::::::QQ 1:::::::1   
               Q:::::::QQQ:::::::Q111:::::1   
               Q::::::O   Q::::::Q   1::::1   
               Q:::::O     Q:::::Q   1::::1   
               Q:::::O     Q:::::Q   1::::1   
               Q:::::O     Q:::::Q   1::::l   
               Q:::::O     Q:::::Q   1::::l   
               Q:::::O     Q:::::Q   1::::l   
               Q:::::O  QQQQ:::::Q   1::::l   
               Q::::::O Q::::::::Q   1::::l   
               Q:::::::QQ::::::::Q111::::::111
                QQ::::::::::::::Q 1::::::::::1
                  QQ:::::::::::Q  1::::::::::1
                    QQQQQQQQ::::QQ111111111111
                            Q:::::Q           
                             QQQQQQ  QUILIBRIUM.ONE                                                                                                                                

                              
===========================================================================
                       ‚ú® QNODE SERVICE UPDATER ‚ú®
===========================================================================
This script will update your Quilibrium node when running it as a service.
It will run your node from the release_autostart.sh file.

Follow the guide at https://docs.quilibrium.one

Made with üî• by LaMat - https://quilibrium.one
===========================================================================

Processing... ‚è≥

EOF

sleep 7  # Add a 7-second delay


#==========================
# NODE UPDATE
#==========================

# Step 1: Stop the ceremonyclient service if it exists
echo "‚è≥ Stopping the ceremonyclient service if it exists..."
if systemctl is-active --quiet ceremonyclient && service ceremonyclient stop; then
    echo "üî¥ Service stopped successfully."
else
    echo "‚ùå Ceremonyclient service either does not exist or could not be stopped." >&2
fi
sleep 1

# Step 2: Move to the ceremonyclient directory
echo "Step 2: Moving to the ceremonyclient directory..."
cd ~/ceremonyclient || { echo "‚ùå Error: Directory ~/ceremonyclient does not exist."; exit 1; }

# Step 3: Discard local changes in release_autorun.sh
echo "‚úÖ Discarding local changes in release_autorun.sh..."
git checkout -- node/release_autorun.sh

# Step 4: Download Binary
echo "‚è≥ Downloading new release v$VERSION"

# Set the remote URL and download
cd  ~/ceremonyclient
git remote set-url origin https://github.com/QuilibriumNetwork/ceremonyclient.git
#git remote set-url origin https://source.quilibrium.com/quilibrium/ceremonyclient.git || git remote set-url origin https://git.quilibrium-mirror.ch/agostbiro/ceremonyclient.git
git checkout main
git branch -D release
git pull
git checkout release


echo "‚úÖ Downloaded the latest changes successfully."

# Get the current user's home directory
HOME=$(eval echo ~$HOME_DIR)

# Use the home directory in the path
NODE_PATH="$HOME/ceremonyclient/node"
EXEC_START="$NODE_PATH/release_autorun.sh"

#==========================
# SERVICE UPDATE
#==========================

# Step 5: Re-Create or Update Ceremonyclient Service
echo "üîß Rebuilding Ceremonyclient Service..."
sleep 2  # Add a 2-second delay
SERVICE_FILE="/lib/systemd/system/ceremonyclient.service"
if [ ! -f "$SERVICE_FILE" ]; then
    echo "üìù Creating new ceremonyclient service file..."
    if ! sudo tee "$SERVICE_FILE" > /dev/null <<EOF
[Unit]
Description=Ceremony Client Go App Service

[Service]
Type=simple
Restart=always
RestartSec=5s
WorkingDirectory=$NODE_PATH
ExecStart=$EXEC_START

[Install]
WantedBy=multi-user.target
EOF
    then
        echo "‚ùå Error: Failed to create ceremonyclient service file." >&2
        exit 1
    fi
else
    echo "üîç Checking existing ceremonyclient service file..."
    
    # Check if the required lines exist or if CPUQuota exists
    if ! grep -q "WorkingDirectory=$NODE_PATH" "$SERVICE_FILE" || ! grep -q "ExecStart=$EXEC_START" "$SERVICE_FILE"; then
        echo "üîÑ Updating existing ceremonyclient service file..."
        # Replace the existing lines with new values
        sudo sed -i "s|WorkingDirectory=.*|WorkingDirectory=$NODE_PATH|" "$SERVICE_FILE"
        sudo sed -i "s|ExecStart=.*|ExecStart=$EXEC_START|" "$SERVICE_FILE"
    else
        echo "‚úÖ No changes needed."
    fi
fi


# Step 6: Start the ceremonyclient service
echo "‚úÖ Starting Ceremonyclient Service"
sleep 2  # Add a 2-second delay
systemctl daemon-reload
systemctl enable ceremonyclient
service ceremonyclient start
